// <auto-generated />
using System;
using Infrastructure.Domain.UnitOfWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(UnitOfWorkContainer))]
    [Migration("20220626125505_AddCreationDate")]
    partial class AddCreationDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Bug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("ProjectId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new { Id = 1, Description = "Has generated over five million design prompts to help you prep for an interview.", Name = "Sharpen Design" },
                        new { Id = 2, Description = "For creating a simple and fun brief generator for every kind of designer.", Name = "Briefz" },
                        new { Id = 3, Description = "Digital version of an analog whiteboard exercise meant to test your skills as a designer.", Name = "Designercize" },
                        new { Id = 4, Description = "Expect to receive a daily email containing a new logo design challenge to tackle.", Name = "The Daily Logo Challenge" },
                        new { Id = 5, Description = " Dribbblers are constantly posting and sharing their work from this challenge.", Name = "Daily UI" }
                    );
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("SurName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Name = "James", SurName = "Allen" },
                        new { Id = 2, Name = "Grant", SurName = "Slaughter" },
                        new { Id = 3, Name = "Ronald ", SurName = "Brown" },
                        new { Id = 4, Name = "Aaron", SurName = "Lawrence" },
                        new { Id = 5, Name = "Randy", SurName = "Greenwood" }
                    );
                });

            modelBuilder.Entity("Domain.Entities.Bug", b =>
                {
                    b.HasOne("Domain.Entities.Project", "Project")
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Bug")
                        .HasForeignKey("Domain.Entities.Bug", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
